#!/usr/bin/env bash

local_user="${local_user}"
platform="${platform}"
app_pat="${app_pat}"
runner_group="${runner_group}"
repository="${repository}"
server_url="${server_url}"
api_url="${api_url}"
pat="${pat}"
ado_repo="${ado_repo}"
pool="${pool}"

case "$platform" in
  (github)
    REQUIRED_VARS=(
      "api_url"
      "repository"
      "app_pat"
      "runner_group"
      "server_url"
    )
    ;;

  (devops)
    REQUIRED_VARS=(
      "ado_repo"
      "pat"
      "pool"
    )
    ;;

  (*)
    echo "Invalid platform: $platform"
    exit 1
    ;;
esac

missing_vars=false

for var in "${REQUIRED_VARS[@]}"; do
  if [[ -z "${!var}" ]]; then
    echo "Missing required variable: $var"
    missing_vars="true"
  fi
done

if [[ "${missing_vars}" == "true" ]]; then
  exit 1
fi

set -euo pipefail

export agent_home="/home/$${local_user}/agent"

function setup_github_runner() {
  pusd ${agent_home}
  curl -sSfL $(curl -sSf https://api.github.com/repos/actions/runner/releases/latest | jq '.assets.[].browser_download_url' -r | egrep 'linux-arm64-[0-9.]+tar.gz$') | tar zx

  runner_pat=$(curl -Ss \
    -X POST \
    -H "Accept: application/vnd.github+json" \
    -H "Authorization: Bearer ${app_pat}" \
    -H "X-GitHub-Api-Version: 2022-11-28" \
    -L "${api_url}/repos/${repository}/actions/runners/registration-pat" | jq -r .pat)

  sudo chown -R "$${local_user}" ${agent_home}

  sudo runuser -l "${local_user}" -c "${agent_home}/config.sh --unattended --url ${server_url}/${repository} --pat ${runner_pat} --runnergroup ${runner_group} --name $(hostname)"
  popd
}

function setup_devops_runner() {
  pusd ${agent_home}
  curl -SsfL https://aka.ms/AAftpys | tar zx

  ./env.sh

  sudo chown -R "$${local_user}" ${agent_home}

  sudo runuser -l "$${local_user}" -c "${agent_home}/config.sh --unattended --url ${ado_repo} --auth pat --pat ${pat} --pool ${pool} --agent $(hostname) --replace --acceptTeeEula"
  popd
}

# Install required packages for this VM to act as a runner on the platform and support docker containers
tdnf install -y \
  ca-certificates \
  curl \
  jq \
  dotnet-runtime-8.0 \
  dotnet-runtime-deps-8.0 \
  krb5-libs \
  libicu \
  lttng-ust \
  moby-cli \
  moby-engine \
  openssl-libs \
  zlib

  if [[ -d /home/runner ]]; then
    echo "Runner might already be installed, let's try to stop it first"
    sudo runuser -l "$${local_user}" -c "cd /home/runner; ./svc.sh stop" || true
  fi

  mkdir -p /home/runner
  cd /home/runner

function setup_runner() {
  case "$platform" in
    (github)
      setup_github_runner
      ;;

    (devops)
      setup_devops_runner
      ;;
  esac
}

# Start docker service
sudo systemctl enable docker.service
sudo systemctl start docker.service
