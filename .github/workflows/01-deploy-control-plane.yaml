# /*---------------------------------------------------------------------------8
# |                                                                            |
# |         This pipeline deploys the control plane in GitHub Actions          |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

name: Deploy Control Plane
run-name: Deploy Control Plane by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      deployer:
        description: "Deployer configuration name, use the following syntax: ENV-LOCA-VNET-INFRASTRUCTURE"
        required: true
        type: environment
      library:
        default: MGMT-NOEU-SAP_LIBRARY
        description: "SAP Library configuration name, use the following syntax: ENV-LOCA-SAP_LIBRARY"
        type: choice
        options:
          - MGMT-NOEU-SAP_LIBRARY
      environment:
        default: MGMT
        description: Environment name
        type: choice
        options:
          - MGMT
          - DEV
          - QA
          - PROD
      use_webapp:
        default: false # Default should be: true
        description: Deploy the configuration web application infrastructure
        type: boolean
      # deploy_webapp_software:
      #   default: true
      #   description: "Deploy the configuration web application software"
      #   type: boolean
      force_reset:
        default: false
        description: Force a re-install - may require multiple re-runs
        type: boolean

permissions:
  contents: write
  id-token: write
  issues: write

jobs:
  setup_deployer:
    name: Prepare the self hosted runners(s)
    environment: ${{ inputs.deployer }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/xpiritbv/azure-sap-automation:github-workflow
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        #   sparse-checkout: |
        #     WORKSPACES

      # Required permissions: org level runner registration permissions
      - name: Get app token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v3
        with:
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}
          organization: ${{ github.repository_owner }}

      - name: Setup deployer
        run: |
          echo '${{ toJSON(github) }}' > /tmp/github_context.json
          deploy/automation/01-deploy-control-plane/01-setup-deployer.sh
        # TODO: working-directory: /source
        env:
          # TODO: connection_name: ${{ inputs.connection_name }}
          APP_REGISTRATION_APP_ID: ${{ secrets.APP_REGISTRATION_APP_ID }}
          APP_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          CONFIG_REPO_PATH: ${{ github.workspace }}/WORKSPACES
          SAP_AUTOMATION_REPO_PATH: ${{ github.workspace }} # TODO: Remove this line when using the sccripts from the container
          WEB_APP_CLIENT_SECRET: ${{ secrets.WEB_APP_CLIENT_SECRET }}
          deployerconfig: ${{ inputs.deployer }}.tfvars
          deployerfolder: ${{ inputs.deployer }}
          force_reset: ${{ inputs.force_reset }}
          libraryconfig: ${{ inputs.library }}.tfvars
          libraryfolder: ${{ inputs.library }}
          use_webapp: ${{ inputs.use_webapp }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: "setup-deployer-logs-${{ github.run_number }}-${{ github.run_attempt }}"
          path: ${{ github.workspace }}/WORKSPACES/.sap_deployment_automation/terraform.log

  deploy_controlplane:
    name: Deploy the control plane
    environment: ${{ inputs.deployer }}
    needs: setup_deployer
    runs-on: self-hosted
    container:
      image: ghcr.io/xpiritbv/azure-sap-automation:github-workflow
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      # Required permissions: org level runner registration permissions
      - name: Get app token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v3
        with:
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}
          organization: ${{ github.repository_owner }}

      - name: Azure Login
        uses: Azure/Login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}

      - name: Deploy control plane
        run: |
          echo '${{ toJSON(github) }}' > /tmp/github_context.json
          deploy/automation/01-deploy-control-plane/02-deploy-control-plane.sh
        # TODO: working-directory: /source
        env:
          APP_REGISTRATION_APP_ID: ${{ secrets.APP_REGISTRATION_APP_ID }}
          APP_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
          CONFIG_REPO_PATH: ${{ github.workspace }}/WORKSPACES
          CP_ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          CP_ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          CP_ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          CP_ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          SAP_AUTOMATION_REPO_PATH: ${{ github.workspace }} # TODO: Remove this line when using the sccripts from the container
          WEB_APP_CLIENT_SECRET: ${{ secrets.WEB_APP_CLIENT_SECRET }}
          deployerconfig: ${{ inputs.deployer }}.tfvars
          deployerfolder: ${{ inputs.deployer }}
          libraryconfig: ${{ inputs.library }}.tfvars
          libraryfolder: ${{ inputs.library }}
          use_webapp: ${{ inputs.use_webapp }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: "deploy-controlplane-logs-${{ github.run_number }}-${{ github.run_attempt }}"
          path: ${{ github.workspace }}/WORKSPACES/.sap_deployment_automation/terraform.log

  web_app_deployment:
    if: ${{ inputs.use_webapp }}
    # if: ${{ inputs.use_webapp }} && ${{ inputs.deploy_webapp_software }}
    name: Deploy SAP configuration Web App
    environment: ${{ inputs.deployer }}
    needs: deploy_controlplane
    runs-on: self-hosted
    container:
      image: ghcr.io/xpiritbv/azure-sap-automation:github-workflow
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: Azure/Login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

      - uses: flcdrg/get-azure-app-configuration-action@v2
        id: get-app-configuration
        with:
          resourceGroup: ${{ vars.APP_CONFIGURATION_RESOURCE_GROUP }}
          appConfigurationName: ${{ vars.APP_CONFIGURATION_NAME }}
          labelFilter: ${{ inputs.deployer }}

      - name: Build the Configuration Web Application
        run: dotnet build Webapp/SDAF/*.csproj

      - name: Publish the Configuration Web Application
        run: |
          dotnet publish Webapp/**/*.csproj \
            --configuration Release \
            --nologo \
            --output WebApp

      - name: Deploy the Configuration Web Application
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.webapp_url_base }}
          package: WebApp
          #publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}

      # - uses: azure/appservice-settings@v1
      #   with:
      #     app-name: "my-app"
      #     slot-name: "staging" # Optional and needed only if the settings have to be configured on the specific deployment slot
      #     app-settings-json: "${{ secrets.APP_SETTINGS }}"
      # appSettings: '-CollectionUri $(System.CollectionUri)
      #                 -ProjectName "$(System.TeamProject)"
      #                 -RepositoryId $(Build.Repository.ID)
      #                 -SourceBranch "$(Build.SourceBranchName)"
      #                 -WORKLOADZONE_PIPELINE_ID $(WORKLOADZONE_PIPELINE_ID)
      #                 -SYSTEM_PIPELINE_ID $(SYSTEM_PIPELINE_ID)
      #                 -SAP_INSTALL_PIPELINE_ID $(SAP_INSTALL_PIPELINE_ID)
      #                 -SDAF_GENERAL_GROUP_ID $(SDAF_GENERAL_GROUP_ID)
      #                 -IS_PIPELINE_DEPLOYMENT true
      #                 -CONTROLPLANE_ENV $(ControlPlaneEnvironment)
      #                 -CONTROLPLANE_LOC $(ControlPlaneLocation)'

      - name: Configure Web Application Authentication
        run: |
          echo "Configure the Web Application authentication using the following script." >> $GITHUB_STEP_SUMMARY
          echo "  ```bash" >> $GITHUB_STEP_SUMMARY
          echo "  az ad app update --id ${{ secrets.APP_REGISTRATION_APP_ID }} \" >> $GITHUB_STEP_SUMMARY
          echo "    --web-home-page-url https://${{ env.WEBAPP_URL_BASE }}.azurewebsites.net \" >> $GITHUB_STEP_SUMMARY
          echo "    --web-redirect-uris https://${{ env.WEBAPP_URL_BASE }}.azurewebsites.net/ https://${{ env.WEBAPP_URL_BASE }}.azurewebsites.net/.auth/login/aad/callback" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "  az role assignment create \" >> $GITHUB_STEP_SUMMARY
          echo "    --assignee ${{ env.WEBAPP_IDENTITY }} \" >> $GITHUB_STEP_SUMMARY
          echo "    --role reader \" >> $GITHUB_STEP_SUMMARY
          echo "    --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} \" >> $GITHUB_STEP_SUMMARY
          echo "    --scope /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ env.RESOURCEGROUP_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "  az webapp restart \" >> $GITHUB_STEP_SUMMARY
          echo "    --resource-group ${{ env.RESOURCEGROUP_NAME }} \" >> $GITHUB_STEP_SUMMARY
          echo "    --name ${{ env.WEBAPP_URL_BASE }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "  echo \"[Access the Web App](https://${{ env.WEBAPP_URL_BASE }}.azurewebsites.net)\"" >> $GITHUB_STEP_SUMMARY
          echo "  ```" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          echo $GITHUB_STEP_SUMMARY > "Web Application Configuration.md"
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          APP_REGISTRATION_APP_ID: ${{ secrets.APP_REGISTRATION_APP_ID }}
          WEBAPP_URL_BASE: ${{ env.WEBAPP_URL_BASE }}
          WEBAPP_IDENTITY: ${{ env.webapp_identity }}
          RESOURCEGROUP_NAME: ${{ env.resourcegroup_name }}

      - uses: actions/upload-artifact@v4
        with:
          name: "web-application-configuration-${{ github.run_number }}-${{ github.run_attempt }}"
          path: "Web Application Configuration.md"

      - name: Create GitHub issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh label create setup-webapp -c 00FF00 -d "Label for issues related to the setup of the configuration web application"
          gh issue create -t "Create GitHub WebApp" -F "Web Application Configuration.md" -l "setup-webapp"
